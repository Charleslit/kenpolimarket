version: '3.9'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: kenpolimarket-postgres
    environment:
      POSTGRES_DB: kenpolimarket
      POSTGRES_USER: kenpolimarket
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kenpolimarket"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: kenpolimarket-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kenpolimarket-backend
    environment:
      DATABASE_URL: postgresql://kenpolimarket:password@postgres:5432/kenpolimarket
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: kenpolimarket-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kenpolimarket-celery
    environment:
      DATABASE_URL: postgresql://kenpolimarket:password@postgres:5432/kenpolimarket
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./data:/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A tasks.celery_app worker --loglevel=info

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kenpolimarket-celery-beat
    environment:
      DATABASE_URL: postgresql://kenpolimarket:password@postgres:5432/kenpolimarket
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./data:/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A tasks.celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data:

